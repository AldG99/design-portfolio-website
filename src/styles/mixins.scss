@import './variables.scss';

// Mixins para media queries responsive
@mixin respond-to($breakpoint) {
  @if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (min-width: $breakpoint-md) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) {
      @content;
    }
  } @else if $breakpoint == 2xl {
    @media (min-width: $breakpoint-2xl) {
      @content;
    }
  }
}

// Flexbox
@mixin flex(
  $direction: row,
  $justify: flex-start,
  $align: stretch,
  $wrap: nowrap
) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// Posicionamiento
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Texto truncado con elipsis
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Transiciones
@mixin transition($properties...) {
  $transitions: ();
  @each $property in $properties {
    $transitions: append($transitions, $property $transition-normal, comma);
  }
  transition: $transitions;
}

// Hover con efecto
@mixin hover-effect {
  @include transition(transform, opacity);

  &:hover {
    transform: translateY(-2px);
    opacity: 0.9;
  }
}

// Animación de fade-in
@mixin fade-in($duration: 0.5s, $delay: 0s) {
  animation: fadeIn $duration ease $delay forwards;
  opacity: 0;

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
}

// Botón base
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $spacing-sm $spacing-lg;
  border-radius: $border-radius-md;
  font-weight: 500;
  cursor: pointer;
  @include transition(background-color, color, transform, box-shadow);

  &:hover {
    transform: translateY(-2px);
    box-shadow: $shadow-md;
  }

  &:active {
    transform: translateY(0);
  }
}

// Contenedor base
@mixin container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 $spacing-lg;

  @include respond-to(md) {
    padding: 0 $spacing-xl;
  }
}

// Sección base
@mixin section {
  padding: $spacing-2xl 0;

  @include respond-to(md) {
    padding: $spacing-3xl 0;
  }
}

// Grid estilo masonry
@mixin grid-masonry($columns: 3, $gap: $spacing-md) {
  display: grid;
  grid-template-columns: repeat(1, 1fr);
  gap: $gap;

  @include respond-to(md) {
    grid-template-columns: repeat(2, 1fr);
  }

  @include respond-to(lg) {
    grid-template-columns: repeat($columns, 1fr);
  }
}

// Efecto de card con hover
@mixin card-hover {
  @include transition(transform, box-shadow);

  &:hover {
    transform: translateY(-5px);
    box-shadow: $shadow-lg;
  }
}

// Título con línea decorativa
@mixin title-with-line {
  position: relative;
  padding-bottom: $spacing-md;

  &::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 3rem;
    height: 3px;
    background-color: $color-accent;
  }
}
